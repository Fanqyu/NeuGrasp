name: neugrasp
group_name: exp

# network
fix_seed: true
network: neugrasp
agg_net_type: neus
use_hierarchical_sampling: true
ray_batch_num: 4096 #4096
sample_volume: true
render_rgb: true
scene_comp: true
volume_type: [sdf]
feature_volume_cfg:
  volume_resolution: 40
  volume_size: 0.3
depth_sample_num: 40
fine_depth_sample_num: 40
agg_net_cfg:
  sample_num: 40
  init_s: 0.3
  fix_s: 0
fine_agg_net_cfg:
  sample_num: 40
  init_s: 0.3
  fix_s: 0
vis_vol: false
img_encoder_cfg:
  n_sample: 16
  deterministic: True
  n_layers: 1
  skip_connect: True
  epipolar:
    dropout: 0.0
    inv_uniform: True

# loss
loss: [render, sdf, vgn]
val_metric: [psnr_ssim, vis_img]
key_metric_name: loss_vgn
key_metric_prefer: lower
use_nr_fine_loss: true
render_depth: true
depth_correct_ratio: 1.0
depth_thresh: 0.8

# lr
total_step: 300000
val_interval: 5000
save_interval: 5000
lr_type: exp_decay
lr_cfg:
  lr_init: 1.0e-4
  decay_step: 50000
  decay_rate: 0.5
nr_initial_training_steps: 0

# dataset
train_dataset_type: gen
train_dataset_cfg:
  resolution_type: hr
  type2sample_weights: { vgn_syn: 100 }  
  train_database_types: ['vgn_syn']  
  aug_pixel_center_sample: true
  aug_view_select_type: hard
  ref_pad_interval: 32
  use_src_imgs: true
  num_input_views: 4

val_set_list:
  -  # 表示[{'name': ......}]
    name: vgn_syn
    type: gen
    val_scene_num: -1 # if the set, use val scene list in asset.py
    cfg:
      use_src_imgs: true
      num_input_views: 4